# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-05-30 00:47:09

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Ensure Month is treated as a categorical variable with sorted order
    data_raw['Month'] = data_raw['Month'].astype(str)
    month_categories = sorted(data_raw['Month'].unique(), key=lambda x: int(x))
    data_raw['Month'] = pd.Categorical(data_raw['Month'], categories=month_categories, ordered=True)

    # Prepare data for each status
    completed = data_raw[data_raw['Status'] == 'Prop_Completed']
    pending = data_raw[data_raw['Status'] == 'Prop_Pending']

    # Create the stacked bar chart
    fig = go.Figure()

    fig.add_trace(go.Bar(
        x=completed['Month'],
        y=completed['Proportion'],
        name='Prop_Completed',
        marker_color='green'
    ))

    fig.add_trace(go.Bar(
        x=pending['Month'],
        y=pending['Proportion'],
        name='Prop_Pending',
        marker_color='orange'
    ))

    fig.update_layout(
        barmode='stack',
        title='Proportion of Sales Completed vs Pending by Month',
        xaxis_title='Month',
        yaxis_title='Proportion of Sales',
        xaxis=dict(type='category'),
        legend_title_text='Status'
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)

    return fig_dict