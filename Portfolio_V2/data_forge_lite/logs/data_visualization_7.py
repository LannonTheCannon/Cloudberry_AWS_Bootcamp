# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-05-30 02:04:35

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Ensure Status is treated as categorical with the order specified
    category_order = ['Completed', 'Pending', 'Cancelled']
    data_raw['Status'] = pd.Categorical(data_raw['Status'], categories=category_order, ordered=True)
    
    # Distinct colors for each status
    colors = {
        'Completed': '#1f77b4',  # blue
        'Pending': '#ff7f0e',    # orange
        'Cancelled': '#d62728'   # red
    }
    
    # Create bar chart
    fig = go.Figure()
    for status in category_order:
        count_val = data_raw.loc[data_raw['Status'] == status, 'Count'].values[0]
        fig.add_trace(go.Bar(
            x=[status],
            y=[count_val],
            name=status,
            marker_color=colors[status],
            text=[count_val],
            textposition='outside'
        ))
    
    fig.update_layout(
        title="Comparison of Transaction Counts by Status to Assess Class Balance",
        xaxis_title="Transaction Status",
        yaxis_title="Number of Transactions",
        xaxis=dict(categoryorder='array', categoryarray=category_order),
        showlegend=False,
        yaxis=dict(tickformat='d'),
        margin=dict(t=80, b=40)
    )
    
    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)
    
    return fig_dict