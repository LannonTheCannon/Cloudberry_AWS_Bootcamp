# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-05-30 03:33:51

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data_list to examine trends in 'Total Sales' aggregated by 'Month' and separated by 'Year'.
    
    data_list: A list of one or more pandas data frames containing the raw data to be wrangled.
    
    Returns:
    A pandas DataFrame with months as rows, years as columns, showing aggregated 'Total Sales' with 
    missing months filled with 0 for continuity.
    '''


    # Ensure input is a list of dataframes
    if not isinstance(data_list, list):
        data_list = [data_list]

    # Since only one dataset 'main' is provided, take the first dataframe
    main = data_list[0]

    # Step 1: Filter out rows where 'Status' == 'Cancelled' to focus only on valid sales
    filtered = main[main['Status'] != 'Cancelled'].copy()

    # Step 2: Group data by 'Year' and 'Month' and aggregate 'Total Sales' by sum
    grouped = filtered.groupby(['Year', 'Month'])['Total Sales'].sum().reset_index()

    # Step 3: Sort grouped data by 'Year' and 'Month' for chronological order
    grouped = grouped.sort_values(['Year', 'Month']).reset_index(drop=True)

    # Step 4: Create a pivot table with 'Month' as index, 'Year' as columns, and 'Total Sales' as values
    pivot_table = grouped.pivot(index='Month', columns='Year', values='Total Sales')

    # Step 5: Check for missing months in each year and fill with 0 to maintain continuity
    # Create a complete index for months (1 to 12)
    full_month_index = pd.Index(range(1, 13), name='Month')
    # Reindex pivot table to include all months, fill missing with 0
    pivot_table = pivot_table.reindex(full_month_index, fill_value=0)

    # Step 6: (Optional) Could add a combined date or period column if required,
    # but for this task, the pivot table format is sufficient for seasonality and growth analysis.

    # Return the pivot table with aggregated and wrangled data ready for analysis
    return pivot_table